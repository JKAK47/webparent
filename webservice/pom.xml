<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>web-parent</artifactId>
        <groupId>org.vincent.web</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>web-service</artifactId>

    <name>web-service 项目service 服务组件，具体实现服务实现。</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <weChat>1557862201</weChat>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
        </dependency>
        <!-- 以来web-facade 接口定义组件 -->
        <dependency>
            <groupId>org.vincent.web</groupId>
            <artifactId>web-facade</artifactId>
            <version>${project.build.version}</version>
        </dependency>
        <dependency>
            <groupId>org.vincent.web</groupId>
            <artifactId>webdao</artifactId>
            <version>${project.build.version}</version>
        </dependency>

        <!-- spring basic lib begin -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-instrument</artifactId>

        </dependency>
        <!-- spring basic lib stop -->

        <!-- common lib begin-->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <!-- common lib stop -->
    </dependencies>

    <build>
            <finalName>web-service</finalName>
            <plugins>
                <!-- 公共插件 配置开始-->
                <plugin>
                    <!-- 配置编译插件 -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                </plugin>
                <plugin>
                    <!-- 配置源码插件 -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                </plugin>
                <!-- 配置使用UTF-8编码去 读取配置文件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                </plugin>
                <!-- 配置打包跳过测试  -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                </plugin>
                <!-- 配置 clean 插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                </plugin>
                <!-- 公共插件 配置结束 -->

            <!-- service 配置一个可执行  jar 包 入口 开始-->
                <!-- 自定义生成jar 包的 插件 maven-jar-plugin
               可实现的功能 ：自定义 manifest 文件
               设定入口Main 类
            -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.0</version>
                    <!-- 创建jar 时候也可以增进/去除一个文件集合
                        通过 executions 标签的includes/excludes 标签和classifier 标签。
                     -->
                    <configuration>
                        <archive>
                            <!--指定自定义的MANIFEST.MF文件 内容 -->
                            <!-- <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>-->
                            <index>true</index>
                            <manifest>
                                <!-- 将工程依赖的classpath 添加到manifes中，将-->
                                <addClasspath>true</addClasspath>
                                <classpathPrefix>lib/</classpathPrefix>
                                <!-- 添加入口Main 方法类 -->
                                <mainClass>org.vincent.web.service.Main</mainClass>
                                <!-- 让引用jar 安装maven 仓库目录结构去引用,不用  -->
                                <!-- <classpathLayoutType>repository</classpathLayoutType>-->
                            </manifest>
                            <manifestEntries>
                                <!--往manifest.mf 里面添加属性信息  -->
                                <DevName>PengRong</DevName>
                                <weChat>${weChat}</weChat>
                                <!-- 将jar 当前目录也当作classpath 添加进去 -->
                                <Class-Path>.</Class-Path>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <!-- 拷贝依赖的jar包到${project.build.directory}/lib目录 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.1</version>
                    <executions>
                        <execution>
                            <id>copy</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <type>jar</type>
                                <includeTypes>jar</includeTypes>
                                <!-- <useUniqueVersions>false</useUniqueVersions>-->
                                <!--复制以来的jar 到 ${project.basedir}/target/lib 目录下 -->
                                <outputDirectory>
                                    ${project.build.directory}/lib
                                </outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- service 配置一个可执行  jar 包 入口 结束 -->

            </plugins>
    </build>
</project>
