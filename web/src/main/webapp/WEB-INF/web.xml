<?xml version="1.0" encoding="UTF-8"?>
<!-- 该web  项目基于  Servlet 3.0 版本 JSP 2.2, EL 2.2 。
    web.xml中配置的执行顺序：
    listener>filter>servlet，而同一种配置片段则按照从上到下的顺序执行。

 -->
<web-app
        xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
        version="3.0">
  <display-name>web 前端显示组件</display-name>
  <description> web HelloWorld</description>
  <!-- Spring MVC 前端控制器  Begin -->
  <servlet>
      <!-- Servlet 的名称 -->
    <servlet-name>springmvc</servlet-name>
      <!--Servlet 对应的实现类，当前使用SpringMVC 框架提供的前端控制器  -->
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--   当前Servlet参数设置，参数值为SpringMVC配置文件路径，
    如果这一步注释掉，则默认前端控制器的Spring-mvc寻找路径为：/WEB-INF/[servlet-name]-servlet.xml ；
    在WEB-INF目录下寻找映射文件

     -->
   <init-param>
     <param-name>contextConfigLocation</param-name>
     <param-value>classpath:springmvc-servlet.xml</param-value>
   </init-param>
      <!-- web 应用启动时候立即加载 Servlet -->
   <load-on-startup>1</load-on-startup>
  </servlet>

<!-- Servlet 映射声明 -->
 <servlet-mapping>
   <!-- 这里的名字要和上面的servlet-name 一致.
    让SpringMVC 的前端控制器拦截所有请求。
   -->
     <!-- 请求对应的Servlet 名称 -->
   <servlet-name>springmvc</servlet-name>
     <!-- / 表示将当前所有的 URL映射到这个Servlet。 -->
   <url-pattern>/</url-pattern>
 </servlet-mapping>

    <!-- Spring MVC 前端控制器  stop -->
</web-app>
